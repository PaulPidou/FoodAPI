{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "http://localhost:3000/api/",
      "variables": {}
    }
  ],
  "info": {
    "title": "Backend API for food project",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Public",
      "description": "Information about recipes, ingredient and other public routes"
    },
    {
      "name": "Authenticated user",
      "description": "Information about authenticated users"
    },
    {
      "name": "Admin",
      "description": "Information about admin routes"
    }
  ],
  "paths": {
    "/public/recipe/{recipeID}": {
      "get": {
        "tags": ["Public"],
        "summary": "Get a recipe by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "recipeID",
            "description": "Identifier of the recipe",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/RecipeWithSubstitutes"
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found"
          }
        }
      }
    },
    "/public/recipes/details": {
      "post": {
        "tags": ["Public"],
        "summary": "Get recipes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of recipes ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipes": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/RecipeWithSubstitutes"}
                }
              }
            }
          },
          "404": {
            "description": "Recipes not found"
          }
        }
      }
    },
    "/public/recipes/summary": {
      "post": {
        "tags": ["Public"],
        "summary": "Get recipes summary",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of recipes ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipes": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/RecipeForList"}
                }
              }
            }
          },
          "404": {
            "description": "Recipes not found"
          }
        }
      }
    },
    "/public/recipes/by/fame": {
      "get": {
        "tags": ["Public"],
        "summary": "Get recipes by fame",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/RecipeForListWithFame"}
                }
              }
            }
          }
        }
      }
    },
    "/public/seasonal/recipes/by/fame": {
      "get": {
        "tags": ["Public"],
        "summary": "Get seasonal recipes by fame",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/RecipeForListWithFame"}
                }
              }
            }
          }
        }
      }
    },
    "/public/recipes/by/keywords": {
      "post": {
        "tags": ["Public"],
        "summary": "Get recipes by keywords",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Keywords to search for matching recipes",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "keywords": {"type": "string"}
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/RecipeForListWithScore"}
                }
              }
            }
          }
        }
      }
    },
    "/public/recipes/by/ingredients": {
      "post": {
        "tags": ["Public"],
        "summary": "Get recipes by ingredients",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Ingredients ID to search for matching recipes",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ingredients": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/RecipeForListWithScore"}
                }
              }
            }
          }
        }
      }
    },
    "/public/ingredients": {
      "get": {
        "tags": ["Public"],
        "summary": "Get all ingredients",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/Ingredients"}
                }
              }
            }
          },
          "404": {
            "description": "Ingredients not found"
          }
        }
      }
    },
    "/public/ingredient/{ingredientID}": {
      "get": {
        "tags": ["Public"],
        "summary": "Get an ingredient by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "ingredientID",
            "description": "Identifier of the ingredient",
            "required": true,
            "schema": {"type": "string"}

          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ingredient"
                }
              }
            }
          },
          "404": {
            "description": "Ingredient not found"
          }
        }
      }
    },
    "/public/ingredient/by/name/{name}": {
      "get": {
        "tags": ["Public"],
        "summary": "Get an ingredient by name",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Name of the ingredient",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ingredient"
                }
              }
            }
          },
          "404": {
            "description": "Ingredient not found"
          }
        }
      }
    },
    "/public/ingredient/by/autocompletion/{term}": {
      "get": {
        "tags": ["Public"],
        "summary": "Get an ingredient by term",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "term",
            "description": "Beginning of ingredients name",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {"type": "string"},
                      "name": {"type": "string"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/register": {
      "post": {
        "tags": ["Public"],
        "summary": "Register to the service",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create a new user",
            "required": true,
            "schema": {"$ref": "#/definitions/User"}

          }
        ],
        "responses": {
          "200": {
            "description": "Registration succeeded"
          },
          "403": {
            "description": "User already exists"
          }
        }
      }
    },
    "/public/login": {
      "post": {
        "tags": ["Public"],
        "summary": "Login to the service",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create a new user",
            "required": true,
            "schema": {"$ref": "#/definitions/User"}

          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {"type": "string", "description": "Auth Token"}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad email or password"
          }
        }
      }
    },
    "/user/profile/me": {
      "get": {
        "tags": ["Authenticated user"],
        "summary": "Get the profile of the connected user",
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/parameters": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Update parameters of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Parameters to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parameters": {
                  "$ref": "#/definitions/Parameters"
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Parameters saved"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/user/lists": {
      "get": {
        "tags": ["Authenticated user"],
        "summary": "Get the lists (saved recipes, shopping list & fridge) of the connected user",
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/UserLists"
                }
              }
            }
          }
        }
      }
    },
    "/user/savedrecipes": {
      "get": {
        "tags": ["Authenticated user"],
        "summary": "Get the saved recipes of the connected user",
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/RecipeForList"}
                }
              }
            }
          },
          "404": {
            "description": "Recipes not found"
          }
        }
      }
    },
    "/user/save/recipes": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Add recipes to the saved recipes of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of recipes ID",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipes": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipes saved"
          },
          "403": {
            "description": "Recipes already saved"
          },
          "404": {
            "description": "Recipes not found"
          }
        }
      }
    },
    "/user/savedrecipes/delete/recipes": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Remove recipes from the saved recipes of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of recipe IDs to delete from the user saved recipes list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipes": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              }
            }

          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipes removed"
          },
          "404": {
            "description": "Recipes not found"
          }
        }
      }
    },
    "/user/savedrecipes/cook/recipes": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Remove cooked recipes and cooked ingredients from the saved recipes and fridge of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of recipe IDs to remove from the user saved recipes list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipes": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              }
            }

          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipes removed"
          },
          "404": {
            "description": "Recipes not found"
          }
        }
      }
    },
    "/user/shoppinglist": {
      "get": {
        "tags": ["Authenticated user"],
        "summary": "Get the shopping list of the connected user",
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/ShoppingItem"}
                }
              }
            }
          }
        }
      }
    },
    "/user/shoppinglist/items": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Add new items to the shopping list of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of items that needs to be added to the shopping list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ingredients": {
                  "type": "array",
                  "description": "Array of ingredients",
                  "items": {"$ref": "#/definitions/Item"}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items saved"
          },
          "404": {
            "description": "Ingredients not found"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/shoppinglist/update/item/": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Update an item of the shopping list of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Item to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShoppingItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item updated"
          }
        }
      }
    },
    "/user/shoppinglist/items/from/recipes": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Add new items to the shopping list of the connected user from recipes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of recipes IDs whose ingredients need to be added to the shopping list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipes": {
                  "type": "array",
                  "description": "Array of recipes",
                  "items": {"type": "string"}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items saved"
          },
          "404": {
            "description": "Recipes not found"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/shoppinglist/delete/items": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Delete items from the shopping list of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of items ID that needs to be removed from the shopping list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "description": "Array of items ID",
                  "items": {"type": "string"}
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items removed"
          },
          "404": {
            "description": "Items not found"
          }
        }
      }
    },
    "/user/fridge": {
      "get": {
        "tags": ["Authenticated user"],
        "summary": "Get the fridge of the connected user",
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/definitions/FridgeItem"}
                }
              }
            }
          }
        }
      }
    },
    "/user/fridge/items": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Add new items to the fridge of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of items that needs to be added to the fridge",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ingredients": {
                  "type": "array",
                  "description": "Array of ingredients",
                  "items": {
                    "allOf": [
                      {"$ref": "#/definitions/Item"},
                      {
                        "type": "object",
                        "properties": {
                          "expirationDate": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items saved"
          },
          "404": {
            "description": "Ingredients not found"
          },
          "422": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/fridge/update/item/": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Update an item of the fridge of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Item to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FridgeItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Item updated"
          }
        }
      }
    },
    "/user/fridge/delete/items": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Delete items from the fridge of the connected user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Array of items ID that needs to be removed from the fridge",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "description": "Array of items ID",
                  "items": {"type": "string"}
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items removed"
          },
          "404": {
            "description": "Items not found"
          }
        }
      }
    },
    "/user/move/items/from/shoppinglist/to/fridge": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Transfer items from the shopping list to the fridge of the user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Items IDs that need to be transferred",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "description": "Array of items IDs",
                  "items": {"type": "string"}
                }
              }
            }

          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items moved"
          },
          "404": {
            "description": "Items not found"
          }
        }
      }
    },
    "/user/move/items/from/fridge/to/shoppinglist": {
      "post": {
        "tags": ["Authenticated user"],
        "summary": "Transfer items from the fridge to the shopping list of the user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Items IDs that need to be transferred",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "description": "Array of items IDs",
                  "items": {"type": "string"}
                }
              }
            }

          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Items moved"
          },
          "404": {
            "description": "Items not found"
          }
        }
      }
    },
    "/admin/set/user/{userID}/admin": {
      "get": {
        "tags": ["Admin"],
        "summary": "Set an user as admin",
        "parameters": [
          {
            "in": "path",
            "name": "userID",
            "description": "ID of the user to set as admin",
            "required": true,
            "schema": {"type": "string"}
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User set as admin"
          }
        }
      }
    },
    "/admin/recipe": {
      "post": {
        "tags": ["Admin"],
        "summary": "Add a recipe to the database",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Recipe to add to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe added"
          }
        }
      }
    },
    "/admin/recipes": {
      "delete": {
        "tags": ["Admin"],
        "summary": "Remove recipes from the database",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "IDs of the recipes to remove from the DB",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipes": {
                  "type": "array",
                  "items": {"type": "string"}
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipes removed"
          },
          "404": {
            "description": "Recipes not found"
          }
        }
      }
    },
    "admin/ingredients/update/substitutes": {
      "post": {
        "tags": ["Admin"],
        "summary": "Update substitutes of given ingredients",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Ingredients to update along with their substitutes",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ingredients": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/IngredientWithSubstitutes" }
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredients updated"
          }
        }
      }
    },
    "admin/ingredients/update/season": {
      "post": {
        "tags": ["Admin"],
        "summary": "Update season of given ingredients",
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Ingredients to update along with their season",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ingredients": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/IngredientWithSeason" }
                }
              }
            }
          }
        ],
        "security": [
          {
            "bearerAuth": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredients updated"
          }
        }
      }
    }
  },
  "definitions": {
    "FridgeItem": {
      "allOf": [
        {"$ref": "#/definitions/ShoppingItem"},
        {
          "type": "object",
          "properties": {
            "expirationDate": {"type": "string", "format": "date-time"}
          }
        }
      ]
    },
    "Item": {
      "type": "object",
      "properties": {
        "ingredientID": {"type": "string"},
        "quantity": {"type": "number", "minimum": 0},
        "unit": {"type": "string"}
      },
      "required": [
        "ingredientID"
      ]
    },
    "ItemQuantity": {
      "type": "object",
      "properties": {
        "quantity": {"type": "number", "minimum": 0},
        "unit": {"type": "string"}
      }
    },
    "Ingredients": {
      "type": "object",
      "properties": {
        "_id": {"type": "string"},
        "name": {"type": "string"}
      }
    },
    "Parameters": {
      "type": "object",
      "properties": {
        "keepFoodListsIndependent": {"type":  "boolean"},
        "transferCheckedShoppingListItemsToFridge": {"type":  "boolean"}
      }
    },
    "Recipe": {
      "type": "object",
      "properties": {
        "title": {"type": "string"},
        "author": {"type": "string"},
        "budget": {"type": "string"},
        "difficulty": {"type": "string"},
        "recipeQuantity": {
          "type": "object",
          "properties": {
            "unit": {"type": "string"},
            "value": {"type": "number"}
          }
        },
        "fame": {"type": "number"},
        "picture": {"type": "string"},
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "display": {"type": "string"},
              "ingredient": {"type": "string"},
              "quantity": {"type": "number"},
              "unit": {"type": "string"},
              "complement": {"type": "string"},
              "picture": {"type": "string"}
            }
          }
        },
        "utensils": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "utensil": {"type": "string"},
              "picture": {"type": "string"}
            }
          }
        },
        "recipe": {
          "type": "array",
          "items": {"type": "string"}
        },
        "tags": {
          "type": "array",
          "items": {"type": "string"}
        },
        "totalTime": {"type": "number"},
        "timingDetails": {
          "type": "object",
          "properties": {
            "preparation": {"type": "number"},
            "cooking": {"type": "number"},
            "rest": {"type": "number"}
          }
        }
      },
      "required": [
        "title"
      ]
    },
    "RecipeWithSubstitutes": {
      "type": "object",
      "properties": {
        "_id": {"type":  "string"},
        "title": {"type": "string"},
        "author": {"type": "string"},
        "budget": {"type": "string"},
        "difficulty": {"type": "string"},
        "recipeQuantity": {
          "type": "object",
          "properties": {
            "unit": {"type": "string"},
            "value": {"type": "number"}
          }
        },
        "fame": {"type": "number"},
        "picture": {"type": "string"},
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "display": {"type": "string"},
              "ingredient": {"type": "string"},
              "quantity": {"type": "number"},
              "unit": {"type": "string"},
              "complement": {"type": "string"},
              "picture": {"type": "string"},
              "substitutes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ingredientID": {
                      "type": "string"
                    },
                    "ingredientName": {
                      "type": "string"
                    },
                    "similarityScore": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "utensils": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "utensil": {"type": "string"},
              "picture": {"type": "string"}
            }
          }
        },
        "recipe": {
          "type": "array",
          "items": {"type": "string"}
        },
        "tags": {
          "type": "array",
          "items": {"type": "string"}
        },
        "totalTime": {"type": "number"},
        "timingDetails": {
          "type": "object",
          "properties": {
            "preparation": {"type": "number"},
            "cooking": {"type": "number"},
            "rest": {"type": "number"}
          }
        }
      }
    },
    "RecipeForList": {
      "type": "object",
      "properties": {
        "_id": {"type": "string"},
        "title": {"type": "string"},
        "budget": {"type": "string"},
        "picture": {"type":  "string"},
        "difficulty": {"type": "string"},
        "totalTime": {"type": "number"},
        "ingredients": {
          "type": "array",
          "items": {
            "type":  "object",
            "properties": {
              "ingredientID": {"type": "string"},
              "quantity": {"type": "number"},
              "unit": {"type": "string"}
            }
          }
        }
      }
    },
    "RecipeForListWithScore": {
      "allOf": [
        {"$ref": "#/definitions/RecipeForList"},
        {
          "type": "object",
          "properties": {
            "score": {"type":  "number"}
          }
        }
      ]
    },
    "RecipeForListWithFame": {
      "allOf": [
        {"$ref": "#/definitions/RecipeForList"},
        {
          "type": "object",
          "properties": {
            "fame": {"type":  "number"}
          }
        }
      ]
    },
    "ShoppingItem": {
      "type": "object",
      "properties": {
        "ingredientID": {"type": "string"},
        "ingredientName": {"type": "string"},
        "quantities": {
          "type": "array",
          "items": {"$ref":  "#/definitions/ItemQuantity"}
        }
      },
      "required": [
        "ingredientID",
        "ingredientName"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "UserLists": {
      "type": "object",
      "properties": {
        "savedRecipes": {
          "type": "array",
          "items": {"$ref": "#/definitions/RecipeForList"}
        },
        "shoppingList": {
          "type": "array",
          "items": {"$ref": "#/definitions/ShoppingItem"}
        },
        "fridge": {
          "type": "array",
          "items": {"$ref": "#/definitions/FridgeItem"}
        }
      }
    },
    "IngredientWithSubstitutes": {
      "type": "object",
      "properties": {
        "ingredientID": {"type": "string"},
        "substitutes": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "ingredientID": {"type": "string"},
              "similarityScore": {"type": "number"}
            }
          }
        }
      },
      "required": [
        "ingredientID",
        "substitutes"
      ]
    },
    "IngredientWithSeason": {
      "type": "object",
      "properties": {
        "ingredientID": {"type": "string"},
        "season": {
          "type": "object",
          "properties": {
            "fullSeason": {
              "type": "array",
              "items": {"type": "string"}
            },
            "available": {
              "type": "array",
              "items": {"type": "string"}
            },
            "unavailable": {
              "type": "array",
              "items": {"type": "string"}
            }
          }
        }
      },
      "required": [
        "ingredientID",
        "season"
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Ingredient": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "units": {
            "type": "array",
            "items": {"type": "string"}
          },
          "recipes": {
            "type": "array",
            "items": {"type": "string"}
          },
          "substitutes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ingredientID": {"type": "string"},
                "ingredientName": {"type": "string"},
                "similarityScore": {"type": "number"}
              }
            }
          },
          "season": {
            "type": "object",
            "properties": {
              "fullSeason": {
                "type": "array",
                "items": {"type": "string"}
              },
              "available": {
                "type": "array",
                "items": {"type": "string"}
              },
              "unavailable": {
                "type": "array",
                "items": {"type": "string"}
              }
            }
          }
        },
        "required": [
          "_id",
          "name"
        ]
      },
      "Recipe": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "_id": {"type":  "string"}
            }
          },
          {"$ref": "#/definitions/Recipe"}
        ],
        "required": [
          "_id"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "isAdmin": {"type":  "boolean"},
          "savedRecipes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "recipeID": {"type":  "string"},
                "savingDate": {
                  "type":  "string",
                  "format": "date-time"
                }
              }
            }
          },
          "shoppingList": {
            "type": "array",
            "items": {"$ref":  "#/definitions/ShoppingItem"}
          },
          "fridge": {
            "type": "array",
            "items": {"$ref":  "#/definitions/FridgeItem"}
          },
          "parameters": {
            "$ref": "#/definitions/Parameters"
          }
        }
      }
    }
  }
}
